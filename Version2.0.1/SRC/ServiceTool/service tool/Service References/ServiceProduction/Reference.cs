//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace service_tool.ServiceProduction {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://license.zeiss.org/", ConfigurationName="ServiceProduction.ActivationUtilityServiceSoap")]
    public interface ActivationUtilityServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://license.zeiss.org/ActivateCertificate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        service_tool.ServiceProduction.ActivateCertificateResponse ActivateCertificate(service_tool.ServiceProduction.ActivateCertificateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://license.zeiss.org/ActivateCertificate", ReplyAction="*")]
        System.Threading.Tasks.Task<service_tool.ServiceProduction.ActivateCertificateResponse> ActivateCertificateAsync(service_tool.ServiceProduction.ActivateCertificateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://license.zeiss.org/ActivateCertificateEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        service_tool.ServiceProduction.ActivateCertificateResponse ActivateCertificateEx(service_tool.ServiceProduction.ActivateCertificateRequestEx request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://license.zeiss.org/ActivateCertificateEx", ReplyAction="*")]
        System.Threading.Tasks.Task<service_tool.ServiceProduction.ActivateCertificateResponse> ActivateCertificateExAsync(service_tool.ServiceProduction.ActivateCertificateRequestEx request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://license.zeiss.org/ActivateEntitlementId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        service_tool.ServiceProduction.EntitlementIdActivationResponse ActivateEntitlementId(service_tool.ServiceProduction.EntitlementIdActivationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://license.zeiss.org/ActivateEntitlementId", ReplyAction="*")]
        System.Threading.Tasks.Task<service_tool.ServiceProduction.EntitlementIdActivationResponse> ActivateEntitlementIdAsync(service_tool.ServiceProduction.EntitlementIdActivationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://license.zeiss.org/LineItemDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        service_tool.ServiceProduction.LineItemDetailResponse LineItemDetails(service_tool.ServiceProduction.LineItemDetailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://license.zeiss.org/LineItemDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<service_tool.ServiceProduction.LineItemDetailResponse> LineItemDetailsAsync(service_tool.ServiceProduction.LineItemDetailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://license.zeiss.org/GetEntitlementIdFromActivationId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        service_tool.ServiceProduction.ActivationIdToEntitlementIdResponse GetEntitlementIdFromActivationId(service_tool.ServiceProduction.ActivationIdToEntitlementIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://license.zeiss.org/GetEntitlementIdFromActivationId", ReplyAction="*")]
        System.Threading.Tasks.Task<service_tool.ServiceProduction.ActivationIdToEntitlementIdResponse> GetEntitlementIdFromActivationIdAsync(service_tool.ServiceProduction.ActivationIdToEntitlementIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://license.zeiss.org/GetEntitlementIdFromFulfillmentId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        service_tool.ServiceProduction.FulfillmentIdToEntitlementIdResponse GetEntitlementIdFromFulfillmentId(service_tool.ServiceProduction.FulfillmentIdToEntitlementIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://license.zeiss.org/GetEntitlementIdFromFulfillmentId", ReplyAction="*")]
        System.Threading.Tasks.Task<service_tool.ServiceProduction.FulfillmentIdToEntitlementIdResponse> GetEntitlementIdFromFulfillmentIdAsync(service_tool.ServiceProduction.FulfillmentIdToEntitlementIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://license.zeiss.org/ActivateLicenses", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        service_tool.ServiceProduction.ActivateLicensesResponse ActivateLicenses(service_tool.ServiceProduction.ActivateLicensesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://license.zeiss.org/ActivateLicenses", ReplyAction="*")]
        System.Threading.Tasks.Task<service_tool.ServiceProduction.ActivateLicensesResponse> ActivateLicensesAsync(service_tool.ServiceProduction.ActivateLicensesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://license.zeiss.org/ActivateEmbeddedLicense", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        service_tool.ServiceProduction.ActivateEmbeddedLicenseResponse ActivateEmbeddedLicense(string authorizationToken, service_tool.ServiceProduction.ActivateEmbeddedLicenseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://license.zeiss.org/ActivateEmbeddedLicense", ReplyAction="*")]
        System.Threading.Tasks.Task<service_tool.ServiceProduction.ActivateEmbeddedLicenseResponse> ActivateEmbeddedLicenseAsync(string authorizationToken, service_tool.ServiceProduction.ActivateEmbeddedLicenseRequest request);
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ActivateCertificateRequestEx))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://license.zeiss.org/")]
    public partial class ActivateCertificateRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] activationIdsField;
        
        private string hostIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] ActivationIds {
            get {
                return this.activationIdsField;
            }
            set {
                this.activationIdsField = value;
                this.RaisePropertyChanged("ActivationIds");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string HostId {
            get {
                return this.hostIdField;
            }
            set {
                this.hostIdField = value;
                this.RaisePropertyChanged("HostId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://license.zeiss.org/")]
    public partial class ActivateEmbeddedLicenseResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string deviceIDField;
        
        private string licenseField;
        
        private bool successField;
        
        private string errorCodeField;
        
        private string errorMessageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string DeviceID {
            get {
                return this.deviceIDField;
            }
            set {
                this.deviceIDField = value;
                this.RaisePropertyChanged("DeviceID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string License {
            get {
                return this.licenseField;
            }
            set {
                this.licenseField = value;
                this.RaisePropertyChanged("License");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
                this.RaisePropertyChanged("Success");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
                this.RaisePropertyChanged("ErrorCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://license.zeiss.org/")]
    public partial class ActivateEmbeddedLicenseRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string activationIDField;
        
        private string deviceIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ActivationID {
            get {
                return this.activationIDField;
            }
            set {
                this.activationIDField = value;
                this.RaisePropertyChanged("ActivationID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string DeviceID {
            get {
                return this.deviceIDField;
            }
            set {
                this.deviceIDField = value;
                this.RaisePropertyChanged("DeviceID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://license.zeiss.org/")]
    public partial class ActivationStatus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string activationIdField;
        
        private Status statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ActivationId {
            get {
                return this.activationIdField;
            }
            set {
                this.activationIdField = value;
                this.RaisePropertyChanged("ActivationId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public Status Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://license.zeiss.org/")]
    public partial class Status : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool successField;
        
        private string messageField;
        
        private string flexnetErrorCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
                this.RaisePropertyChanged("success");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string flexnetErrorCode {
            get {
                return this.flexnetErrorCodeField;
            }
            set {
                this.flexnetErrorCodeField = value;
                this.RaisePropertyChanged("flexnetErrorCode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://license.zeiss.org/")]
    public partial class CertificateFile : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string fileNameField;
        
        private string fileContentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
                this.RaisePropertyChanged("FileName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string FileContent {
            get {
                return this.fileContentField;
            }
            set {
                this.fileContentField = value;
                this.RaisePropertyChanged("FileContent");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://license.zeiss.org/")]
    public partial class ActivateLicensesResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string activationResponseField;
        
        private CertificateFile[] certificatesField;
        
        private ActivationStatus[] statusesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ActivationResponse {
            get {
                return this.activationResponseField;
            }
            set {
                this.activationResponseField = value;
                this.RaisePropertyChanged("ActivationResponse");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public CertificateFile[] Certificates {
            get {
                return this.certificatesField;
            }
            set {
                this.certificatesField = value;
                this.RaisePropertyChanged("Certificates");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public ActivationStatus[] Statuses {
            get {
                return this.statusesField;
            }
            set {
                this.statusesField = value;
                this.RaisePropertyChanged("Statuses");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://license.zeiss.org/")]
    public partial class ActivateLicensesRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string activationRequestField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ActivationRequest {
            get {
                return this.activationRequestField;
            }
            set {
                this.activationRequestField = value;
                this.RaisePropertyChanged("ActivationRequest");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("Version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://license.zeiss.org/")]
    public partial class FulfillmentIdToEntitlementIdResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Status statusField;
        
        private string entitlementIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public Status Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string EntitlementId {
            get {
                return this.entitlementIdField;
            }
            set {
                this.entitlementIdField = value;
                this.RaisePropertyChanged("EntitlementId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://license.zeiss.org/")]
    public partial class FulfillmentIdToEntitlementIdRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string fulfillmentIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string FulfillmentId {
            get {
                return this.fulfillmentIdField;
            }
            set {
                this.fulfillmentIdField = value;
                this.RaisePropertyChanged("FulfillmentId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://license.zeiss.org/")]
    public partial class ActivationIdToEntitlementIdResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Status statusField;
        
        private string entitlementIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public Status Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string EntitlementId {
            get {
                return this.entitlementIdField;
            }
            set {
                this.entitlementIdField = value;
                this.RaisePropertyChanged("EntitlementId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://license.zeiss.org/")]
    public partial class ActivationIdToEntitlementIdRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string activationIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ActivationId {
            get {
                return this.activationIdField;
            }
            set {
                this.activationIdField = value;
                this.RaisePropertyChanged("ActivationId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://license.zeiss.org/")]
    public partial class LineItemDetail : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string activationIdField;
        
        private string productNameField;
        
        private string productVersionField;
        
        private int quantityField;
        
        private int quantityRemainingField;
        
        private string orderIdField;
        
        private string orderItemIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ActivationId {
            get {
                return this.activationIdField;
            }
            set {
                this.activationIdField = value;
                this.RaisePropertyChanged("ActivationId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ProductName {
            get {
                return this.productNameField;
            }
            set {
                this.productNameField = value;
                this.RaisePropertyChanged("ProductName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ProductVersion {
            get {
                return this.productVersionField;
            }
            set {
                this.productVersionField = value;
                this.RaisePropertyChanged("ProductVersion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
                this.RaisePropertyChanged("Quantity");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int QuantityRemaining {
            get {
                return this.quantityRemainingField;
            }
            set {
                this.quantityRemainingField = value;
                this.RaisePropertyChanged("QuantityRemaining");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string OrderId {
            get {
                return this.orderIdField;
            }
            set {
                this.orderIdField = value;
                this.RaisePropertyChanged("OrderId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string OrderItemId {
            get {
                return this.orderItemIdField;
            }
            set {
                this.orderItemIdField = value;
                this.RaisePropertyChanged("OrderItemId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://license.zeiss.org/")]
    public partial class LineItemDetailResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Status statusField;
        
        private LineItemDetail[] lineItemDetailsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public Status Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public LineItemDetail[] LineItemDetails {
            get {
                return this.lineItemDetailsField;
            }
            set {
                this.lineItemDetailsField = value;
                this.RaisePropertyChanged("LineItemDetails");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://license.zeiss.org/")]
    public partial class LineItemDetailRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string entitlementIdField;
        
        private string activationIdField;
        
        private System.Nullable<bool> restrictToItemsWithCountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string EntitlementId {
            get {
                return this.entitlementIdField;
            }
            set {
                this.entitlementIdField = value;
                this.RaisePropertyChanged("EntitlementId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ActivationId {
            get {
                return this.activationIdField;
            }
            set {
                this.activationIdField = value;
                this.RaisePropertyChanged("ActivationId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public System.Nullable<bool> RestrictToItemsWithCount {
            get {
                return this.restrictToItemsWithCountField;
            }
            set {
                this.restrictToItemsWithCountField = value;
                this.RaisePropertyChanged("RestrictToItemsWithCount");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://license.zeiss.org/")]
    public partial class EntitlementIdActivationResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Status statusField;
        
        private string responseXMLField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public Status Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string responseXML {
            get {
                return this.responseXMLField;
            }
            set {
                this.responseXMLField = value;
                this.RaisePropertyChanged("responseXML");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://license.zeiss.org/")]
    public partial class EntitlementIdActivationRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] activationIdsField;
        
        private string[] entitlementIdsField;
        
        private string requestXmlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] activationIds {
            get {
                return this.activationIdsField;
            }
            set {
                this.activationIdsField = value;
                this.RaisePropertyChanged("activationIds");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public string[] entitlementIds {
            get {
                return this.entitlementIdsField;
            }
            set {
                this.entitlementIdsField = value;
                this.RaisePropertyChanged("entitlementIds");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string requestXml {
            get {
                return this.requestXmlField;
            }
            set {
                this.requestXmlField = value;
                this.RaisePropertyChanged("requestXml");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://license.zeiss.org/")]
    public partial class ActivateCertificateResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Status statusField;
        
        private string filenameField;
        
        private string certificateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public Status Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Filename {
            get {
                return this.filenameField;
            }
            set {
                this.filenameField = value;
                this.RaisePropertyChanged("Filename");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Certificate {
            get {
                return this.certificateField;
            }
            set {
                this.certificateField = value;
                this.RaisePropertyChanged("Certificate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://license.zeiss.org/")]
    public partial class ActivateCertificateRequestEx : ActivateCertificateRequest {
        
        private string[] entitlementIdsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] EntitlementIds {
            get {
                return this.entitlementIdsField;
            }
            set {
                this.entitlementIdsField = value;
                this.RaisePropertyChanged("EntitlementIds");
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ActivationUtilityServiceSoapChannel : service_tool.ServiceProduction.ActivationUtilityServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ActivationUtilityServiceSoapClient : System.ServiceModel.ClientBase<service_tool.ServiceProduction.ActivationUtilityServiceSoap>, service_tool.ServiceProduction.ActivationUtilityServiceSoap {
        
        public ActivationUtilityServiceSoapClient() {
        }
        
        public ActivationUtilityServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ActivationUtilityServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ActivationUtilityServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ActivationUtilityServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public service_tool.ServiceProduction.ActivateCertificateResponse ActivateCertificate(service_tool.ServiceProduction.ActivateCertificateRequest request) {
            return base.Channel.ActivateCertificate(request);
        }
        
        public System.Threading.Tasks.Task<service_tool.ServiceProduction.ActivateCertificateResponse> ActivateCertificateAsync(service_tool.ServiceProduction.ActivateCertificateRequest request) {
            return base.Channel.ActivateCertificateAsync(request);
        }
        
        public service_tool.ServiceProduction.ActivateCertificateResponse ActivateCertificateEx(service_tool.ServiceProduction.ActivateCertificateRequestEx request) {
            return base.Channel.ActivateCertificateEx(request);
        }
        
        public System.Threading.Tasks.Task<service_tool.ServiceProduction.ActivateCertificateResponse> ActivateCertificateExAsync(service_tool.ServiceProduction.ActivateCertificateRequestEx request) {
            return base.Channel.ActivateCertificateExAsync(request);
        }
        
        public service_tool.ServiceProduction.EntitlementIdActivationResponse ActivateEntitlementId(service_tool.ServiceProduction.EntitlementIdActivationRequest request) {
            return base.Channel.ActivateEntitlementId(request);
        }
        
        public System.Threading.Tasks.Task<service_tool.ServiceProduction.EntitlementIdActivationResponse> ActivateEntitlementIdAsync(service_tool.ServiceProduction.EntitlementIdActivationRequest request) {
            return base.Channel.ActivateEntitlementIdAsync(request);
        }
        
        public service_tool.ServiceProduction.LineItemDetailResponse LineItemDetails(service_tool.ServiceProduction.LineItemDetailRequest request) {
            return base.Channel.LineItemDetails(request);
        }
        
        public System.Threading.Tasks.Task<service_tool.ServiceProduction.LineItemDetailResponse> LineItemDetailsAsync(service_tool.ServiceProduction.LineItemDetailRequest request) {
            return base.Channel.LineItemDetailsAsync(request);
        }
        
        public service_tool.ServiceProduction.ActivationIdToEntitlementIdResponse GetEntitlementIdFromActivationId(service_tool.ServiceProduction.ActivationIdToEntitlementIdRequest request) {
            return base.Channel.GetEntitlementIdFromActivationId(request);
        }
        
        public System.Threading.Tasks.Task<service_tool.ServiceProduction.ActivationIdToEntitlementIdResponse> GetEntitlementIdFromActivationIdAsync(service_tool.ServiceProduction.ActivationIdToEntitlementIdRequest request) {
            return base.Channel.GetEntitlementIdFromActivationIdAsync(request);
        }
        
        public service_tool.ServiceProduction.FulfillmentIdToEntitlementIdResponse GetEntitlementIdFromFulfillmentId(service_tool.ServiceProduction.FulfillmentIdToEntitlementIdRequest request) {
            return base.Channel.GetEntitlementIdFromFulfillmentId(request);
        }
        
        public System.Threading.Tasks.Task<service_tool.ServiceProduction.FulfillmentIdToEntitlementIdResponse> GetEntitlementIdFromFulfillmentIdAsync(service_tool.ServiceProduction.FulfillmentIdToEntitlementIdRequest request) {
            return base.Channel.GetEntitlementIdFromFulfillmentIdAsync(request);
        }
        
        public service_tool.ServiceProduction.ActivateLicensesResponse ActivateLicenses(service_tool.ServiceProduction.ActivateLicensesRequest request) {
            return base.Channel.ActivateLicenses(request);
        }
        
        public System.Threading.Tasks.Task<service_tool.ServiceProduction.ActivateLicensesResponse> ActivateLicensesAsync(service_tool.ServiceProduction.ActivateLicensesRequest request) {
            return base.Channel.ActivateLicensesAsync(request);
        }
        
        public service_tool.ServiceProduction.ActivateEmbeddedLicenseResponse ActivateEmbeddedLicense(string authorizationToken, service_tool.ServiceProduction.ActivateEmbeddedLicenseRequest request) {
            return base.Channel.ActivateEmbeddedLicense(authorizationToken, request);
        }
        
        public System.Threading.Tasks.Task<service_tool.ServiceProduction.ActivateEmbeddedLicenseResponse> ActivateEmbeddedLicenseAsync(string authorizationToken, service_tool.ServiceProduction.ActivateEmbeddedLicenseRequest request) {
            return base.Channel.ActivateEmbeddedLicenseAsync(authorizationToken, request);
        }
    }
}
